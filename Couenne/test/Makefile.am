# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Common Public License.

## $Id: Makefile.am 41 2006-12-22 00:43:42Z pbelotti $

# Author:  Andreas Waechter           IBM    2006-04-13

AUTOMAKE_OPTIONS = foreign

########################################################################
#                        testfun for Couenne                           #
########################################################################

noinst_PROGRAMS = sdpcuts genrandQp testconv testeval testclp

testconv_SOURCES = fun/testconv.cpp
testeval_SOURCES = fun/testeval.cpp
testclp_SOURCES  = fun/clp-try.cpp

sdpcuts_SOURCES  = fun/sdpcuts.cpp \
	           fun/populate.cpp \
	           fun/createCut.cpp \
	           fun/SdpCutGen.cpp \
	           fun/separateEV.cpp \
	           fun/separateGrad.cpp \
	           fun/separateTRM.cpp \
	           fun/separateLU.cpp \
	           fun/separateBK.cpp \
	           fun/partialLU.c \
	           fun/eigenPlay.cpp \
	           fun/dsyevx_wrapper.cpp \
	           fun/updateSol.cpp \
		   fun/genSDPcut.cpp


genrandQp_SOURCES = fun/genrandQp.c


# List libraries of COIN projects
testconv_LDADD = \
        ../src/libCouenne.la \
	$(ASLLIB) \
	$(COINLIBS) \
	$(ADDLIBS)
# List libraries of COIN projects
testeval_LDADD = \
        ../src/libCouenne.la \
	$(ASLLIB) \
	$(COINLIBS) \
	$(ADDLIBS)
# List libraries of COIN projects
testclp_LDADD = \
        ../src/libCouenne.la \
	$(ASLLIB) \
	$(COINLIBS) \
	$(ADDLIBS)

sdpcuts_LDADD = \
        ../src/libCouenne.la \
	/usr/local/lib/libdgqt.a \
	$(ASLLIB) \
	$(COINLIBS) \
	$(ADDLIBS)

COINLIBS = \
	$(CGLOBJDIR)/src/libCgl.la \
	$(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
	$(OSIOBJDIR)/src/OsiCpx/libOsiCpx.la \
	$(CBCOBJDIR)/src/libCbc.la \
	$(OSIOBJDIR)/src/libOsi.la \
	$(CLPOBJDIR)/src/libClp.la \
	$(COINUTILSOBJDIR)/src/libCoinUtils.la \
	$(COINUTILSOBJDIR)/../ThirdParty/Lapack/libcoinlapack.la

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Cygwin
AM_CPPFLAGS = \
	-I`$(CYGPATH_W) $(COINUTILSSRCDIR)/src` \
	-I`$(CYGPATH_W) $(COINUTILSOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiClp` \
	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiCpx` \
	-I`$(CYGPATH_W) $(OSISRCDIR)/src` \
	-I`$(CYGPATH_W) $(OSIOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(CLPSRCDIR)/src` \
	-I`$(CYGPATH_W) $(CLPOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(CGLSRCDIR)/src` \
	-I`$(CYGPATH_W) $(CGLOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/test/fun` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/expression` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/expression/operators` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/branch` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/util` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/convex` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/convex/sdpcuts` \
	-I`$(CYGPATH_W) $(COUENNESRCDIR)/src/problem` \
	-I`$(CYGPATH_W) $(OSISRCDIR)/src` \
	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiClp` \
	-I`$(CYGPATH_W) $(OSIOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(CBCSRCDIR)/src` \
	-I`$(CYGPATH_W) $(CBCSRCDIR)/inc` \
	-I`$(CYGPATH_W) $(IPOPTSRCDIR)/src/Common` \
	-I`$(CYGPATH_W) $(IPOPTSRCDIR)/src/LinAlg` \
	-I`$(CYGPATH_W) $(IPOPTSRCDIR)/src/Interfaces` \
	-I`$(CYGPATH_W) $(IPOPTOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(CGLSRCDIR)/src` \
	-I`$(CYGPATH_W) $(CGLOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(CLPSRCDIR)/src` \
	-I`$(CYGPATH_W) $(CLPOBJDIR)/inc` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/OaAlgorithms` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/Interfaces` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/CbcBonmin` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/Algorithms` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/Algorithms/OaGenerators` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/Algorithms/Branching` \
	-I`$(CYGPATH_W) $(BONMINSRCDIR)/src/CbcBonmin` \
	-I`$(CYGPATH_W) $(objdir)/inc` \
	-I`$(CYGPATH_W) $(COINUTILSSRCDIR)/src` \
	-I`$(CYGPATH_W) $(COINUTILSOBJDIR)/inc`

# If we have the Ampl solver library, we need to add additional things
if COIN_HAS_ASL
AM_CPPFLAGS += $(ASL_CPPFLAGS)
endif

# This line is necessary to allow VPATH compilation with MS compilers
# on Cygwin
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)` -I$(top_builddir)/inc

#test: testconv$(EXEEXT) testeval$(EXEEXT) sdpcuts
test: sdpcuts$(EXEEXT)
#	./testfun$(EXEEXT)

.PHONY: test

########################################################################
#                          Cleaning stuff                              #
########################################################################

# Here we list everything that is not generated by the compiler, e.g.,
# output files of a program

DISTCLEANFILES = 
